import 'package:darkit/domain/levels/entities/cell_entity.dart';
import 'package:darkit/domain/levels/entities/level_entity.dart';

class TutorialLevels {
  static const List<LevelEntity> levels = [
    LevelEntity(id: 'tut6x6n1', chapterId: 'tutorial', cells: [
      CellEntity(1, 1, true),
      CellEntity(2, 1, true),
      CellEntity(3, 1, true),
      CellEntity(4, 1, true),
      CellEntity(5, 1),
      CellEntity(6, 1, true),
      CellEntity(1, 2, true),
      CellEntity(2, 2, true),
      CellEntity(3, 2, true),
      CellEntity(4, 2),
      CellEntity(5, 2),
      CellEntity(6, 2),
      CellEntity(1, 3, true),
      CellEntity(2, 3, true),
      CellEntity(3, 3, true),
      CellEntity(4, 3, true),
      CellEntity(5, 3),
      CellEntity(6, 3, true),
      CellEntity(1, 4, true),
      CellEntity(2, 4, true),
      CellEntity(3, 4, true),
      CellEntity(4, 4, true),
      CellEntity(5, 4, true),
      CellEntity(6, 4, true),
      CellEntity(1, 5),
      CellEntity(2, 5, true),
      CellEntity(3, 5, true),
      CellEntity(4, 5, true),
      CellEntity(5, 5, true),
      CellEntity(6, 5, true),
      CellEntity(1, 6),
      CellEntity(2, 6),
      CellEntity(3, 6, true),
      CellEntity(4, 6, true),
      CellEntity(5, 6, true),
      CellEntity(6, 6, true),
    ], solution: [
      CellEntity(5, 2),
      CellEntity(1, 6),
    ]),
    LevelEntity(id: 'tut6x6n2', chapterId: 'tutorial', cells: [
      CellEntity(1, 1),
      CellEntity(2, 1),
      CellEntity(3, 1, true),
      CellEntity(4, 1, true),
      CellEntity(5, 1),
      CellEntity(6, 1),
      CellEntity(1, 2),
      CellEntity(2, 2),
      CellEntity(3, 2, true),
      CellEntity(4, 2, true),
      CellEntity(5, 2),
      CellEntity(6, 2),
      CellEntity(1, 3),
      CellEntity(2, 3),
      CellEntity(3, 3),
      CellEntity(4, 3),
      CellEntity(5, 3),
      CellEntity(6, 3),
      CellEntity(1, 4, true),
      CellEntity(2, 4),
      CellEntity(3, 4),
      CellEntity(4, 4),
      CellEntity(5, 4),
      CellEntity(6, 4, true),
      CellEntity(1, 5),
      CellEntity(2, 5),
      CellEntity(3, 5, true),
      CellEntity(4, 5, true),
      CellEntity(5, 5),
      CellEntity(6, 5),
      CellEntity(1, 6),
      CellEntity(2, 6),
      CellEntity(3, 6),
      CellEntity(4, 6),
      CellEntity(5, 6),
      CellEntity(6, 6),
    ], solution: [
      CellEntity(4, 5),
      CellEntity(3, 5),
      CellEntity(5, 3),
      CellEntity(2, 3),
      CellEntity(6, 6),
      CellEntity(1, 6),
      CellEntity(6, 1),
      CellEntity(1, 1),
    ]),
    LevelEntity(id: 'tut6x6n3', chapterId: 'tutorial', cells: [
      CellEntity(1, 1),
      CellEntity(2, 1),
      CellEntity(3, 1),
      CellEntity(4, 1),
      CellEntity(5, 1),
      CellEntity(6, 1),
      CellEntity(1, 2),
      CellEntity(2, 2),
      CellEntity(3, 2),
      CellEntity(4, 2),
      CellEntity(5, 2),
      CellEntity(6, 2),
      CellEntity(1, 3),
      CellEntity(2, 3),
      CellEntity(3, 3),
      CellEntity(4, 3),
      CellEntity(5, 3, true),
      CellEntity(6, 3),
      CellEntity(1, 4),
      CellEntity(2, 4),
      CellEntity(3, 4),
      CellEntity(4, 4),
      CellEntity(5, 4, true),
      CellEntity(6, 4),
      CellEntity(1, 5),
      CellEntity(2, 5),
      CellEntity(3, 5),
      CellEntity(4, 5),
      CellEntity(5, 5),
      CellEntity(6, 5),
      CellEntity(1, 6),
      CellEntity(2, 6),
      CellEntity(3, 6),
      CellEntity(4, 6),
      CellEntity(5, 6),
      CellEntity(6, 6),
    ], solution: [
      CellEntity(3, 4),
      CellEntity(3, 3),
      CellEntity(2, 4),
      CellEntity(2, 3),
      CellEntity(1, 6),
      CellEntity(4, 6),
      CellEntity(6, 5),
      CellEntity(6, 2),
      CellEntity(4, 1),
      CellEntity(1, 1),
    ]),
  ];
}
