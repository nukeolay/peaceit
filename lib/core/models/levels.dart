import 'package:makeitdark/core/models/cell.dart';
import 'package:makeitdark/core/models/level.dart';

class Levels {
  static List<Level> allLevels = [
    Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1),
      Cell(3, 1, true),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2),
      Cell(1, 3, true),
      Cell(2, 3),
      Cell(3, 3, true),
    ], bestResult: 1, goodResult: 4, id: '3x3a'),
    Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(1, 2),
      Cell(2, 2, true),
      Cell(3, 2, true),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3, true),
    ], bestResult: 1, goodResult: 4, id: '3x3b'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2, true),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3),
    ], bestResult: 4, goodResult: 7, id: '3x3c'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1),
      Cell(3, 1),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3),
    ], bestResult: 5, goodResult: 8, id: '3x3d'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(1, 2, true),
      Cell(2, 2),
      Cell(3, 2, true),
      Cell(1, 3, true),
      Cell(2, 3, true),
      Cell(3, 3),
    ], bestResult: 3, goodResult: 6, id: '3x3e'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1),
      Cell(3, 1),
      Cell(4, 1),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2, true),
      Cell(4, 2),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3),
      Cell(4, 3),
      Cell(1, 4, true),
      Cell(2, 4),
      Cell(3, 4),
      Cell(4, 4),
    ], bestResult: 4, goodResult: 7, id: '4x4a'),
    Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1),
      Cell(3, 1),
      Cell(4, 1, true),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2),
      Cell(4, 2),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3),
      Cell(4, 3),
      Cell(1, 4, true),
      Cell(2, 4),
      Cell(3, 4),
      Cell(4, 4, true),
    ], bestResult: 4, goodResult: 7, id: '4x4b'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(4, 1, true),
      Cell(5, 1, true),
      Cell(1, 2, true),
      Cell(2, 2),
      Cell(3, 2, true),
      Cell(4, 2, true),
      Cell(5, 2, true),
      Cell(1, 3, true),
      Cell(2, 3, true),
      Cell(3, 3),
      Cell(4, 3, true),
      Cell(5, 3, true),
      Cell(1, 4, true),
      Cell(2, 4, true),
      Cell(3, 4, true),
      Cell(4, 4),
      Cell(5, 4, true),
      Cell(1, 5, true),
      Cell(2, 5, true),
      Cell(3, 5, true),
      Cell(4, 5, true),
      Cell(5, 5),
    ], bestResult: 5, goodResult: 8, id: '5x5a'),
    Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1),
      Cell(3, 1),
      Cell(4, 1),
      Cell(5, 1),
      Cell(1, 2),
      Cell(2, 2, true),
      Cell(3, 2),
      Cell(4, 2),
      Cell(5, 2),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3, true),
      Cell(4, 3),
      Cell(5, 3),
      Cell(1, 4),
      Cell(2, 4),
      Cell(3, 4),
      Cell(4, 4),
      Cell(5, 4),
      Cell(1, 5),
      Cell(2, 5),
      Cell(3, 5),
      Cell(4, 5),
      Cell(5, 5, true),
    ], bestResult: 5, goodResult: 8, id: '5x5b'),
    Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1),
      Cell(3, 1),
      Cell(4, 1),
      Cell(5, 1),
      Cell(1, 2),
      Cell(2, 2, true),
      Cell(3, 2),
      Cell(4, 2),
      Cell(5, 2),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3, true),
      Cell(4, 3),
      Cell(5, 3),
      Cell(1, 4),
      Cell(2, 4),
      Cell(3, 4),
      Cell(4, 4, true),
      Cell(5, 4),
      Cell(1, 5),
      Cell(2, 5),
      Cell(3, 5),
      Cell(4, 5),
      Cell(5, 5, true),
    ], bestResult: 10, goodResult: 15, id: '5x5c'),







 Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1),
      Cell(3, 1, true),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2),
      Cell(1, 3, true),
      Cell(2, 3),
      Cell(3, 3, true),
    ], bestResult: 1, goodResult: 4, id: 'x1'),
    Level(cells: [
      Cell(1, 1, true),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(1, 2),
      Cell(2, 2, true),
      Cell(3, 2, true),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3, true),
    ], bestResult: 1, goodResult: 4, id: 'x2'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2, true),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3),
    ], bestResult: 4, goodResult: 7, id: 'x3'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1),
      Cell(3, 1),
      Cell(1, 2),
      Cell(2, 2),
      Cell(3, 2),
      Cell(1, 3),
      Cell(2, 3),
      Cell(3, 3),
    ], bestResult: 5, goodResult: 8, id: 'x4'),
    Level(cells: [
      Cell(1, 1),
      Cell(2, 1, true),
      Cell(3, 1, true),
      Cell(1, 2, true),
      Cell(2, 2),
      Cell(3, 2, true),
      Cell(1, 3, true),
      Cell(2, 3, true),
      Cell(3, 3),
    ], bestResult: 3, goodResult: 6, id: 'x5'),



  ];
}
